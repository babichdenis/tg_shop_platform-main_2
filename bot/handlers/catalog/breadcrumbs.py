import logging
from django_app.shop.models import Category

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω breadcrumbs.py –≤–µ—Ä—Å–∏–∏ 2025-04-22 –±–µ–∑ sync_to_async")


def get_category_path(category_id: str) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—É—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π (breadcrumb) –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    :param category_id: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ "root".
    :return: –°—Ç—Ä–æ–∫–∞ —Å –ø—É—Ç—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–∞—Ç–∞–ª–æ–≥ > –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ > –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã").
    """
    logger.debug(f"–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: category_id={category_id}")
    if category_id == "root":
        return "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥"

    try:
        path = []
        current_category = Category.objects.get(id=category_id)
        while current_category:
            path.append(current_category.name)
            current_category = current_category.parent
        path.reverse()
        result = "üõçÔ∏è " + " > ".join(path)
        logger.debug(f"–ü—É—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω: {result}")
        return result
    except Category.DoesNotExist:
        logger.warning(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID {category_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥"
    except Exception as e:
        logger.error(
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—É—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category_id}: {e}")
        return "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥"
