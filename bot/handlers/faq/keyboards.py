import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from bot.core.config import FAQ_PER_PAGE, FAQ_SEARCH_PER_PAGE

logger = logging.getLogger(__name__)

def build_faq_keyboard(faq_items, page: int, total_pages: int):
    """–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ FAQ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    logger.debug(f"–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è FAQ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page} –∏–∑ {total_pages}.")
    buttons = []

    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ –∫–Ω–æ–ø–æ–∫
    start_index = (page - 1) * FAQ_PER_PAGE

    # –ö–Ω–æ–ø–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —É—á—ë—Ç–æ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
    number_buttons = [
        InlineKeyboardButton(text=str(start_index + i + 1), callback_data=f"faq_item_{item.id}")
        for i, item in enumerate(faq_items)
    ]
    if number_buttons:
        buttons.append(number_buttons)
        logger.debug("–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ FAQ.")

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    if total_pages > 1:
        if page > 1:
            pagination_buttons.append(InlineKeyboardButton(text="‚Üê", callback_data=f"faq_page_{page - 1}"))
        pagination_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="noop"))
        if page < total_pages:
            pagination_buttons.append(InlineKeyboardButton(text="‚Üí", callback_data=f"faq_page_{page + 1}"))
        buttons.append(pagination_buttons)
        logger.debug("–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ FAQ.")

    buttons.append([InlineKeyboardButton(text="üîç –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")])
    buttons.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def build_search_keyboard(results, indices, page: int, total_pages: int, query: str):
    """–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ FAQ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    logger.debug(f"–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ FAQ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}', —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {total_pages}.")
    buttons = []

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫
    number_buttons = [
        InlineKeyboardButton(text=str(index), callback_data=f"faq_item_{item.id}")
        for item, index in zip(results, indices)
    ]
    if number_buttons:
        buttons.append(number_buttons)
        logger.debug("–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –Ω–æ–º–µ—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö FAQ.")

    encoded_query = query.replace("_", "##")
    pagination_buttons = []
    if total_pages > 1:
        if page > 1:
            pagination_buttons.append(
                InlineKeyboardButton(text="‚Üê", callback_data=f"search_page_{page - 1}_{encoded_query}")
            )
        pagination_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="noop"))
        if page < total_pages:
            pagination_buttons.append(
                InlineKeyboardButton(text="‚Üí", callback_data=f"search_page_{page + 1}_{encoded_query}")
            )
        buttons.append(pagination_buttons)
        logger.debug("–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ FAQ.")

    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ FAQ", callback_data="faq")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def back_to_list_keyboard(page: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É FAQ."""
    logger.debug(f"–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É FAQ, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page}.")
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"faq_page_{page}")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
