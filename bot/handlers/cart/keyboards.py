from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def _format_number(value) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ: —Ü–µ–ª–æ–µ –±–µ–∑ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö, –∏–Ω–∞—á–µ —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π."""
    return f"{int(value)}" if isinstance(value, int) or value == int(value) else f"{value:.2f}"


def generate_cart_keyboard(user, items, cart_quantity: int, cart_total, page: int = 1, items_per_page: int = 5) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    if not items:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", callback_data="noop")
        ])
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="üìã –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥",
                                 callback_data="catalog"),
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        ])
    else:
        formatted_total = _format_number(cart_total)

        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        total_items = len(items)
        total_pages = max(
            1, (total_items + items_per_page - 1) // items_per_page)
        start_idx = (page - 1) * items_per_page
        end_idx = start_idx + items_per_page
        current_items = items[start_idx:end_idx]

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä
        for item in current_items:
            product = item.product
            item_total = product.price * item.quantity
            formatted_item_total = _format_number(item_total)
            keyboard.inline_keyboard.append([
                InlineKeyboardButton(
                    text=f"{product.name} x{item.quantity} | {formatted_item_total} ‚ÇΩ",
                    callback_data="noop"
                )
            ])
            keyboard.inline_keyboard.append([
                InlineKeyboardButton(
                    text="‚àí", callback_data=f"decrease_item_{product.id}"),
                InlineKeyboardButton(
                    text=f"{item.quantity}", callback_data="noop"),
                InlineKeyboardButton(
                    text="+", callback_data=f"increase_item_{product.id}"),
                InlineKeyboardButton(
                    text="‚ùå", callback_data=f"remove_item_{product.id}")
            ])

        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ–ª—å—à–µ 1 —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
        if total_pages > 1:
            pagination = []
            if page > 1:
                pagination.append(InlineKeyboardButton(
                    text="‚¨ÖÔ∏è", callback_data=f"cart_page_{page - 1}"))
            pagination.append(InlineKeyboardButton(
                text=f"{page}/{total_pages}", callback_data="noop"))
            if page < total_pages:
                pagination.append(InlineKeyboardButton(
                    text="‚û°Ô∏è", callback_data=f"cart_page_{page + 1}"))
            keyboard.inline_keyboard.append(pagination)

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"–ò—Ç–æ–≥–æ: {formatted_total} ‚ÇΩ", callback_data="noop")
        ])

        # –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞ {formatted_total} ‚ÇΩ", callback_data="checkout")
        ])

        # –ö–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É" –∏ "–ù–∞–∑–∞–¥"
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å",
                                 callback_data="clear_cart"),
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        ])

    return keyboard


def generate_empty_cart_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥",
                              callback_data="catalog")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ])


def generate_back_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
    ])


def generate_skip_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' –∏ '–ù–∞–∑–∞–¥'."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip"),
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
        ]
    ])


def generate_confirmation_keyboard(total) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""
    formatted_total = _format_number(total)
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=f"–ó–∞–∫–∞–∑ –Ω–∞ {formatted_total} ‚ÇΩ. –û—Ñ–æ—Ä–º–∏—Ç—å?", callback_data="confirm"),
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
        ]
    ])


def generate_edit_choice_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìç –ê–¥—Ä–µ—Å", callback_data="edit_address"),
            InlineKeyboardButton(text="üìû –¢–µ–ª–µ—Ñ–æ–Ω", callback_data="edit_phone")
        ],
        [
            InlineKeyboardButton(text="üí¨ –ü–æ–∂–µ–ª–∞–Ω–∏—è",
                                 callback_data="edit_wishes"),
            InlineKeyboardButton(text="‚è∞ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏",
                                 callback_data="edit_delivery_time")
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_confirmation")
        ]
    ])
