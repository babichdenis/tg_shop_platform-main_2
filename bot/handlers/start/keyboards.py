from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.handlers.start.subscriptions import check_subscriptions
from bot.core.config import SUBSCRIPTION_CHANNEL_ID, SUBSCRIPTION_GROUP_ID
from bot.handlers.cart.models import async_get_or_create_user, async_get_cart_quantity


async def main_menu_keyboard(bot, user_id):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å —É—á—ë—Ç–æ–º –ø–æ–¥–ø–∏—Å–∫–∏."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    has_subscription = True
    if SUBSCRIPTION_CHANNEL_ID or SUBSCRIPTION_GROUP_ID:
        subscription_result, _ = await check_subscriptions(bot, user_id)
        has_subscription = subscription_result

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, _ = await async_get_or_create_user(tg_id=user_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
    cart_quantity = await async_get_cart_quantity(user)
    cart_text = f"üõí –ö–æ—Ä–∑–∏–Ω–∞: {cart_quantity} —à—Ç." if cart_quantity > 0 else "üõí –ö–æ—Ä–∑–∏–Ω–∞"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ: 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É)
    if has_subscription:
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        keyboard.inline_keyboard.extend([
            [
                InlineKeyboardButton(
                    text="üõç –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog"),
                InlineKeyboardButton(text="üìã –ü—Ä–∞–π—Å-–ª–∏—Å—Ç",
                                     callback_data="price_list_1"),
            ],
            [
                InlineKeyboardButton(
                    text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
                InlineKeyboardButton(text="‚ùì FAQ", callback_data="faq"),
            ],
            [
                InlineKeyboardButton(text=cart_text, callback_data="cart"),
                InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about"),
            ],
        ])
    else:
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å –∑–∞–º–æ—á–∫–∞–º–∏)
        keyboard.inline_keyboard.extend([
            [
                InlineKeyboardButton(text="üîí üõç –ö–∞—Ç–∞–ª–æ–≥",
                                     callback_data="locked_catalog"),
                InlineKeyboardButton(text="üîí üìã –ü—Ä–∞–π—Å-–ª–∏—Å—Ç",
                                     callback_data="locked_price_list"),
            ],
            [
                InlineKeyboardButton(text="üîí üë§ –ü—Ä–æ—Ñ–∏–ª—å",
                                     callback_data="locked_profile"),
                InlineKeyboardButton(text="‚ùì FAQ", callback_data="faq"),
            ],
            [
                InlineKeyboardButton(
                    text=f"üîí {cart_text}", callback_data="locked_cart"),
                InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about"),
            ],
        ])

    return keyboard


async def profile_keyboard(user):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–æ—Ñ–∏–ª—è."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="main_menu")]
    ])
    return keyboard


async def price_list_keyboard(user, page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination = []
    if page > 1:
        pagination.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è", callback_data=f"price_list_{page - 1}"))
    pagination.append(InlineKeyboardButton(
        text=f"{page}/{total_pages}", callback_data="noop"))
    if page < total_pages:
        pagination.append(InlineKeyboardButton(
            text="‚û°Ô∏è", callback_data=f"price_list_{page + 1}"))
    if pagination:
        keyboard.inline_keyboard.append(pagination)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="main_menu")
    ])

    return keyboard
